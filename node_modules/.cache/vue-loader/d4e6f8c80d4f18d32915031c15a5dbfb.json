{"remainingRequest":"E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Front\\vue-manage-system-dev\\src\\components\\page\\tourist\\PersonNumLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Front\\vue-manage-system-dev\\src\\components\\page\\tourist\\PersonNumLine.vue","mtime":1582358494602},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport echarts from 'echarts';\nimport relations from '../../../static/data/similarityMatrix';\nimport speaks from '../../../static/data/dayVectors';\nexport default {\n  data() {\n    return {\n      chart: null,\n      times: ['00:00', '00:30', '01:00', '01:30', '02:00','02:30','03:00','03:30','04:00','04:30','05:00','05:30','06:00','06:30','07:00','07:30','08:00','08:30','09:00','09:30','10:00','10:30','11:00','11:30','12:00','12:30','13:00','13:30','14:00','14:30','15:00','15:30','16:00','16:30','17:00','17:30','18:00','18:30','19:00','19:30','20:00','20:30','21:00','21:30','22:00','22:30','23:00','23:30']\n    };\n  },\n  methods: {\n    convertData (arr) {\n      var result = [];\n      for (var i = 0; i < arr.length - 1; i++) {\n        for (var j = i; j < arr.length-1; j++) {\n          result[result.length] = [i,j,arr[i][j]];\n        }\n      }\n      return result;\n    },\n    computeTotalSpeak (arr) {\n      var totalSpeak = new Array(240);\n      for (var i = 0; i < 240; i++) {\n        totalSpeak[i] = 0;\n        for (var j = 0; j < 30; j++) {\n          if (arr[j][i] !== 0) {\n            totalSpeak[i] += arr[j][i];\n          }\n        }\n      }\n      var result = new Array(48);\n      for (var k = 0; k < 48; k++) {\n        result[k] = 0;\n        for (var m = 0; m < 5; m++) {\n          result[k] += totalSpeak[5*k+m];\n        }\n      }\n      return result;\n    },\n    drawHeatMap(id) {\n      this.chart = echarts.init(document.getElementById(id));\n      this.chart.setOption({\n        title: {\n          subtext: '数值越大两者越亲密',\n          subtextStyle: {\n            fontSize: 16\n          },\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {},\n            dataView: {}\n          },\n          right: 15\n        },\n        animation: false,\n        grid: {\n          height: '78%',\n          bottom: '14%'\n        },\n        xAxis: {\n          type: 'category',\n          data: [\"lxx\", \"lx\", \"pn\", \"xrf\", \"lxd\", \"zrj\", \"wsr\", \"lcd\", \"gt\", \"zsx\", \"wly\", \"yyz\", \"zn\", \"zls\", \"hrh\", \"dp\", \"yjw\", \"ljh\", \"ryh\", \"zsh\", \"mqd\", \"prj\", \"gyc\", \"xzl\", \"qy\", \"zxz\", \"hy\", \"hb\", \"zly\"],\n          axisLabel: {\n            rotate: 60,\n            interval: 0\n          },\n          splitArea: {\n            show: true\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: [\"lxx\", \"lx\", \"pn\", \"xrf\", \"lxd\", \"zrj\", \"wsr\", \"lcd\", \"gt\", \"zsx\", \"wly\", \"yyz\", \"zn\", \"zls\", \"hrh\", \"dp\", \"yjw\", \"ljh\", \"ryh\", \"zsh\", \"mqd\", \"prj\", \"gyc\", \"xzl\", \"qy\", \"zxz\", \"hy\", \"hb\", \"zly\"],\n          splitArea: {\n            show: true\n          }\n        },\n        visualMap: {\n          min: 0,\n          max: 100,\n          calculable: true,\n          itemheight: 300,\n          orient: 'horizontal',\n          left: 'center',\n          bottom: '3%'\n        },\n        series: [\n          {\n            name: '亲密度',\n            type: 'heatmap',\n            data: this.convertData(relations),\n            label: {\n              normal: {\n                show: true\n              }\n            },\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      });\n    },\n    drawLine(id) {\n      this.chart = echarts.init(document.getElementById(id));\n      this.chart.setOption({\n        tooltip: {\n          trigger: 'axis'\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {},\n            dataView: {}\n          },\n          left: 16,\n          top: 8\n        },\n        xAxis: {\n          data: this.times\n        },\n        yAxis: {\n          splitLine: {\n              show: false\n          }\n        },\n        dataZoom: [{\n          startValue: '00：00'\n        }, {\n          type: 'inside'\n        }],\n        visualMap: {\n          top: 10,\n          right: 10,\n          pieces: [{\n            gt: 0,\n            lte: 100,\n            color: '#096'\n          }, {\n            gt: 100,\n            lte: 200,\n            color: '#ffde33'\n          }, {\n            gt: 200,\n            lte: 300,\n            color: '#ff9933'\n          }, {\n            gt: 300,\n            lte: 400,\n            color: '#cc0033'\n          }, {\n            gt: 400,\n            lte: 600,\n            color: '#660099'\n          }, {\n            gt: 600,\n            color: '#7e0023'\n          }],\n          outOfRange: {\n            color: '#999'\n          }\n        },\n        series: {\n          name: '发言量',\n          type: 'line',\n          symbol: 'triangle',\n          symbolSize: 8,\n          data: this.computeTotalSpeak(speaks),\n          markLine: {\n            silent: true,\n            data: [{\n              yAxis: 100\n            }, {\n              yAxis: 200\n            }, {\n              yAxis: 300\n            }, {\n              yAxis: 400\n            }, {\n              yAxis: 600\n            }]\n          }\n        }\n      });\n    }\n  },\n  mounted() {\n    this.$nextTick(function() {\n      this.drawHeatMap('relation');\n      this.drawLine('activetime');\n      var that = this;\n      var resizeTimer = null;\n      window.onresize = function() {\n        if (resizeTimer) clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(function() {\n          that.drawHeatMap('relation')\n          that.drawLine('activetime');\n        }, 100);\n      }\n    });\n  }\n}\n",{"version":3,"sources":["PersonNumLine.vue"],"names":[],"mappingsfile":"PersonNumLine.vue","sourceRoot":"src/components/page/tourist","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"relation\"></div>\r\n    <div id=\"activetime\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import echarts from 'echarts';\r\n  import relations from '../../../static/data/similarityMatrix';\r\n  import speaks from '../../../static/data/dayVectors';\r\n  export default {\r\n    data() {\r\n      return {\r\n        chart: null,\r\n        times: ['00:00', '00:30', '01:00', '01:30', '02:00','02:30','03:00','03:30','04:00','04:30','05:00','05:30','06:00','06:30','07:00','07:30','08:00','08:30','09:00','09:30','10:00','10:30','11:00','11:30','12:00','12:30','13:00','13:30','14:00','14:30','15:00','15:30','16:00','16:30','17:00','17:30','18:00','18:30','19:00','19:30','20:00','20:30','21:00','21:30','22:00','22:30','23:00','23:30']\r\n      };\r\n    },\r\n    methods: {\r\n      convertData (arr) {\r\n        var result = [];\r\n        for (var i = 0; i < arr.length - 1; i++) {\r\n          for (var j = i; j < arr.length-1; j++) {\r\n            result[result.length] = [i,j,arr[i][j]];\r\n          }\r\n        }\r\n        return result;\r\n      },\r\n      computeTotalSpeak (arr) {\r\n        var totalSpeak = new Array(240);\r\n        for (var i = 0; i < 240; i++) {\r\n          totalSpeak[i] = 0;\r\n          for (var j = 0; j < 30; j++) {\r\n            if (arr[j][i] !== 0) {\r\n              totalSpeak[i] += arr[j][i];\r\n            }\r\n          }\r\n        }\r\n        var result = new Array(48);\r\n        for (var k = 0; k < 48; k++) {\r\n          result[k] = 0;\r\n          for (var m = 0; m < 5; m++) {\r\n            result[k] += totalSpeak[5*k+m];\r\n          }\r\n        }\r\n        return result;\r\n      },\r\n      drawHeatMap(id) {\r\n        this.chart = echarts.init(document.getElementById(id));\r\n        this.chart.setOption({\r\n          title: {\r\n            subtext: '数值越大两者越亲密',\r\n            subtextStyle: {\r\n              fontSize: 16\r\n            },\r\n            left: 'center'\r\n          },\r\n          tooltip: {\r\n            trigger: 'item'\r\n          },\r\n          toolbox: {\r\n            feature: {\r\n              saveAsImage: {},\r\n              dataView: {}\r\n            },\r\n            right: 15\r\n          },\r\n          animation: false,\r\n          grid: {\r\n            height: '78%',\r\n            bottom: '14%'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: [\"lxx\", \"lx\", \"pn\", \"xrf\", \"lxd\", \"zrj\", \"wsr\", \"lcd\", \"gt\", \"zsx\", \"wly\", \"yyz\", \"zn\", \"zls\", \"hrh\", \"dp\", \"yjw\", \"ljh\", \"ryh\", \"zsh\", \"mqd\", \"prj\", \"gyc\", \"xzl\", \"qy\", \"zxz\", \"hy\", \"hb\", \"zly\"],\r\n            axisLabel: {\r\n              rotate: 60,\r\n              interval: 0\r\n            },\r\n            splitArea: {\r\n              show: true\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'category',\r\n            data: [\"lxx\", \"lx\", \"pn\", \"xrf\", \"lxd\", \"zrj\", \"wsr\", \"lcd\", \"gt\", \"zsx\", \"wly\", \"yyz\", \"zn\", \"zls\", \"hrh\", \"dp\", \"yjw\", \"ljh\", \"ryh\", \"zsh\", \"mqd\", \"prj\", \"gyc\", \"xzl\", \"qy\", \"zxz\", \"hy\", \"hb\", \"zly\"],\r\n            splitArea: {\r\n              show: true\r\n            }\r\n          },\r\n          visualMap: {\r\n            min: 0,\r\n            max: 100,\r\n            calculable: true,\r\n            itemheight: 300,\r\n            orient: 'horizontal',\r\n            left: 'center',\r\n            bottom: '3%'\r\n          },\r\n          series: [\r\n            {\r\n              name: '亲密度',\r\n              type: 'heatmap',\r\n              data: this.convertData(relations),\r\n              label: {\r\n                normal: {\r\n                  show: true\r\n                }\r\n              },\r\n              itemStyle: {\r\n                emphasis: {\r\n                  shadowBlur: 10,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        });\r\n      },\r\n      drawLine(id) {\r\n        this.chart = echarts.init(document.getElementById(id));\r\n        this.chart.setOption({\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          toolbox: {\r\n            feature: {\r\n              saveAsImage: {},\r\n              dataView: {}\r\n            },\r\n            left: 16,\r\n            top: 8\r\n          },\r\n          xAxis: {\r\n            data: this.times\r\n          },\r\n          yAxis: {\r\n            splitLine: {\r\n                show: false\r\n            }\r\n          },\r\n          dataZoom: [{\r\n            startValue: '00：00'\r\n          }, {\r\n            type: 'inside'\r\n          }],\r\n          visualMap: {\r\n            top: 10,\r\n            right: 10,\r\n            pieces: [{\r\n              gt: 0,\r\n              lte: 100,\r\n              color: '#096'\r\n            }, {\r\n              gt: 100,\r\n              lte: 200,\r\n              color: '#ffde33'\r\n            }, {\r\n              gt: 200,\r\n              lte: 300,\r\n              color: '#ff9933'\r\n            }, {\r\n              gt: 300,\r\n              lte: 400,\r\n              color: '#cc0033'\r\n            }, {\r\n              gt: 400,\r\n              lte: 600,\r\n              color: '#660099'\r\n            }, {\r\n              gt: 600,\r\n              color: '#7e0023'\r\n            }],\r\n            outOfRange: {\r\n              color: '#999'\r\n            }\r\n          },\r\n          series: {\r\n            name: '发言量',\r\n            type: 'line',\r\n            symbol: 'triangle',\r\n            symbolSize: 8,\r\n            data: this.computeTotalSpeak(speaks),\r\n            markLine: {\r\n              silent: true,\r\n              data: [{\r\n                yAxis: 100\r\n              }, {\r\n                yAxis: 200\r\n              }, {\r\n                yAxis: 300\r\n              }, {\r\n                yAxis: 400\r\n              }, {\r\n                yAxis: 600\r\n              }]\r\n            }\r\n          }\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$nextTick(function() {\r\n        this.drawHeatMap('relation');\r\n        this.drawLine('activetime');\r\n        var that = this;\r\n        var resizeTimer = null;\r\n        window.onresize = function() {\r\n          if (resizeTimer) clearTimeout(resizeTimer);\r\n          resizeTimer = setTimeout(function() {\r\n            that.drawHeatMap('relation')\r\n            that.drawLine('activetime');\r\n          }, 100);\r\n        }\r\n      });\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  #relations\r\n  #activetime {\r\n    position: relative;\r\n    left: 50%;\r\n    width: 90%;\r\n    height: 900px;\r\n    margin-left: -45%;\r\n    box-shadow: 0 0 10px #EDE68A;\r\n    border-radius: 10px;\r\n  }\r\n  #activetime {\r\n    height: 600px;\r\n    margin-top: 30px;\r\n  }\r\n</style>\r\n"]}]}