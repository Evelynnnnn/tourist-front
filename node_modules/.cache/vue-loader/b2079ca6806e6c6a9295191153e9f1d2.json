{"remainingRequest":"E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Front\\vue-manage-system-dev\\src\\components\\page\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Front\\vue-manage-system-dev\\src\\components\\page\\home.vue","mtime":1583298241612},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions, mapState } from \"vuex\"\nimport { createPageable } from \"../../assets/script/model\"\nimport UserCard from \"../../components/pages/shared/UserCard\"\nimport SearchBox from \"../../components/pages/shared/SearchBox\"\nimport stompMixin from \"../../assets/script/mixin/stompMixin\"\n\nexport default {\n    components: {\n        SearchBox,\n        UserCard\n    },\n    mixins: [stompMixin],\n    computed: {\n        ...mapState(\"user\", [\"user\"])\n    },\n    // 在这里不能使用httpUtil\n    async asyncData({ store, $axios }) {\n        store.commit(\"menu/MChangeName\", \"home\")\n        const taskList = []\n        taskList.push($axios.get(`/tag/listTagAndPictureTop30`))\n        taskList.push(\n            $axios.get(`/picture/pagingByRecommend`, {\n                params: createPageable(0, 12)\n            })\n        )\n        taskList.push(\n            $axios.get(`/picture/paging`, {\n                params: createPageable(0, 12, \"createDate,desc\")\n            })\n        )\n        const resultList = (await Promise.all(taskList)).map((item) => item.data)\n        let tagPictureList = resultList[0].data\n        const tagList = tagPictureList\n            .filter((_, index) => index >= 4)\n            .map((item) => item.tag)\n        tagPictureList = tagPictureList.filter((_, index) => index < 4)\n        return {\n            tagList,\n            tagPictureList,\n            likeList: resultList[1].data.content,\n            newList: resultList[2].data.content\n        }\n    },\n    methods: {\n        ...mapActions(\"picture\", [\"ACollection\"]),\n        async collection(picture) {\n            const result = await this.ACollection({\n                pictureId: picture.id\n            })\n            if (result.status !== 200) {\n                this.$notify({ message: result.message })\n                return\n            }\n            picture.focus = result.data\n        },\n        follow({ userId, focus }) {\n            this.likeList.forEach((item) => {\n                if (item.user.id === userId) {\n                    item.user.focus = focus\n                }\n            })\n            this.newList.forEach((item) => {\n                if (item.user.id === userId) {\n                    item.user.focus = focus\n                }\n            })\n        }\n    }\n}\n",{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"home.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n    <div class=\"page\">\r\n        <div\r\n                v-lazy:background-image=\"$img.backLazy(user.background)\"\r\n                class=\"user-bk cover flex-box\"\r\n        >\r\n            <SearchBox></SearchBox>\r\n        </div>\r\n        <div class=\"content-grid\">\r\n            <div class=\"left-box\">\r\n                <div class=\"card image-card\">\r\n                    <h3 class=\"title\">\r\n                        发现\r\n                        <Btn round flat small color=\"primary\" to=\"/find\"> 更多>></Btn>\r\n                    </h3>\r\n                    <div class=\"image-grid-row\">\r\n                        <div v-for=\"(picture, index) in likeList\" :key=\"index\" class=\"item\">\r\n                            <div class=\"img-box\">\r\n                                <nuxt-link v-ripple :to=\"`/picture/${picture.id}`\">\r\n                                    <img\r\n                                            v-lazy=\"$img.secdraLazy(picture, 240, true)\"\r\n                                            class=\"cover\"\r\n                                    />\r\n                                </nuxt-link>\r\n                            </div>\r\n                            <div class=\"tool\">\r\n                                <Popper placement=\"top\" trigger=\"hover\">\r\n                                    <UserCard :user=\"picture.user\" @follow=\"follow\"></UserCard>\r\n                                    <template #reference>\r\n                                        <nuxt-link\r\n                                                v-ripple\r\n                                                :to=\"`/user/${picture.user.id}`\"\r\n                                                class=\"head-image\"\r\n                                        >\r\n                                            <img\r\n                                                    v-lazy=\"$img.headLazy(picture.user.head, 'small50')\"\r\n                                            />\r\n                                        </nuxt-link>\r\n                                    </template>\r\n                                </Popper>\r\n                                <div class=\"tool-btn-group\">\r\n                                    <Btn v-tooltip=\"`浏览`\" flat icon small>\r\n                                        <i class=\"icon ali-icon-attention\"></i>\r\n                                    </Btn>\r\n                                    <span>{{ picture.viewAmount }}</span>\r\n                                    <Btn\r\n                                            v-tooltip=\"\r\n                      picture.focus === $enum.CollectState.CONCERNED.key\r\n                        ? `取消收藏`\r\n                        : `收藏`\r\n                    \"\r\n                                            flat\r\n                                            icon\r\n                                            :color=\"\r\n                      picture.focus === $enum.CollectState.CONCERNED.key\r\n                        ? `red`\r\n                        : `default`\r\n                    \"\r\n                                            small\r\n                                            @click.stop=\"collection(picture)\"\r\n                                    >\r\n                                        <i\r\n                                                class=\"icon\"\r\n                                                :class=\"{\r\n                        'ali-icon-likefill':\r\n                          picture.focus === $enum.CollectState.CONCERNED.key,\r\n                        'ali-icon-like':\r\n                          picture.focus !== $enum.CollectState.CONCERNED.key\r\n                      }\"\r\n                                        ></i>\r\n                                    </Btn>\r\n                                    <span>{{ picture.likeAmount }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card image-card\">\r\n                    <h3 class=\"title\">\r\n                        最新\r\n                        <Btn round flat small color=\"primary\" to=\"/new\"> 更多>></Btn>\r\n                    </h3>\r\n                    <div class=\"image-grid-row\">\r\n                        <div v-for=\"(picture, index) in newList\" :key=\"index\" class=\"item\">\r\n                            <div class=\"img-box\">\r\n                                <nuxt-link v-ripple :to=\"`/picture/${picture.id}`\">\r\n                                    <img\r\n                                            v-lazy=\"$img.secdraLazy(picture, 240, true)\"\r\n                                            class=\"cover\"\r\n                                    />\r\n                                </nuxt-link>\r\n                            </div>\r\n                            <div class=\"tool\">\r\n                                <Popper placement=\"top\" trigger=\"hover\">\r\n                                    <UserCard :user=\"picture.user\" @follow=\"follow\"></UserCard>\r\n                                    <template #reference>\r\n                                        <nuxt-link\r\n                                                v-ripple\r\n                                                :to=\"`/user/${picture.user.id}`\"\r\n                                                class=\"head-image\"\r\n                                        >\r\n                                            <img\r\n                                                    v-lazy=\"$img.headLazy(picture.user.head, 'small50')\"\r\n                                            />\r\n                                        </nuxt-link>\r\n                                    </template>\r\n                                </Popper>\r\n                                <div class=\"tool-btn-group\">\r\n                                    <Btn v-tooltip=\"`浏览`\" flat icon small>\r\n                                        <i class=\"icon ali-icon-attention\"></i>\r\n                                    </Btn>\r\n                                    <span>{{ picture.viewAmount }}</span>\r\n                                    <Btn\r\n                                            v-tooltip=\"\r\n                      picture.focus === $enum.CollectState.CONCERNED.key\r\n                        ? `取消收藏`\r\n                        : `收藏`\r\n                    \"\r\n                                            flat\r\n                                            icon\r\n                                            :color=\"\r\n                      picture.focus === $enum.CollectState.CONCERNED.key\r\n                        ? `red`\r\n                        : `default`\r\n                    \"\r\n                                            small\r\n                                            @click.stop=\"collection(picture)\"\r\n                                    >\r\n                                        <i\r\n                                                class=\"icon\"\r\n                                                :class=\"{\r\n                        'ali-icon-likefill':\r\n                          picture.focus === $enum.CollectState.CONCERNED.key,\r\n                        'ali-icon-like':\r\n                          picture.focus !== $enum.CollectState.CONCERNED.key\r\n                      }\"\r\n                                        ></i>\r\n                                    </Btn>\r\n                                    <span>{{ picture.likeAmount }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-box\">\r\n                <div class=\"card tag-card\">\r\n                    <h3 class=\"title\">\r\n                        热门推荐\r\n                    </h3>\r\n                    <Carousel class=\"tag-picture-carousel\" height=\"200px\">\r\n                        <CarouselItem\r\n                                v-for=\"(tagPicture, index) in tagPictureList\"\r\n                                :key=\"index\"\r\n                                v-tooltip=\"tagPicture.tag\"\r\n                        >\r\n                            <nuxt-link\r\n                                    :to=\"`/picture/search/${encodeURIComponent(tagPicture.tag)}`\"\r\n                            >\r\n                                <img\r\n                                        v-lazy=\"$img.secdraLazy(tagPicture.url, `specifiedWidth`)\"\r\n                                />\r\n                            </nuxt-link>\r\n                        </CarouselItem>\r\n                    </Carousel>\r\n                    <div class=\"tag-list\">\r\n                        <Btn\r\n                                v-for=\"(tag, index) in tagList\"\r\n                                :key=\"index\"\r\n                                :to=\"`/picture/search/${encodeURIComponent(tag)}`\"\r\n                                color=\"primary\"\r\n                                outline\r\n                                small\r\n                        >{{ tag }}\r\n                        </Btn>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from \"vuex\"\r\n    import { createPageable } from \"../../assets/script/model\"\r\n    import UserCard from \"../../components/pages/shared/UserCard\"\r\n    import SearchBox from \"../../components/pages/shared/SearchBox\"\r\n    import stompMixin from \"../../assets/script/mixin/stompMixin\"\r\n\r\n    export default {\r\n        components: {\r\n            SearchBox,\r\n            UserCard\r\n        },\r\n        mixins: [stompMixin],\r\n        computed: {\r\n            ...mapState(\"user\", [\"user\"])\r\n        },\r\n        // 在这里不能使用httpUtil\r\n        async asyncData({ store, $axios }) {\r\n            store.commit(\"menu/MChangeName\", \"home\")\r\n            const taskList = []\r\n            taskList.push($axios.get(`/tag/listTagAndPictureTop30`))\r\n            taskList.push(\r\n                $axios.get(`/picture/pagingByRecommend`, {\r\n                    params: createPageable(0, 12)\r\n                })\r\n            )\r\n            taskList.push(\r\n                $axios.get(`/picture/paging`, {\r\n                    params: createPageable(0, 12, \"createDate,desc\")\r\n                })\r\n            )\r\n            const resultList = (await Promise.all(taskList)).map((item) => item.data)\r\n            let tagPictureList = resultList[0].data\r\n            const tagList = tagPictureList\r\n                .filter((_, index) => index >= 4)\r\n                .map((item) => item.tag)\r\n            tagPictureList = tagPictureList.filter((_, index) => index < 4)\r\n            return {\r\n                tagList,\r\n                tagPictureList,\r\n                likeList: resultList[1].data.content,\r\n                newList: resultList[2].data.content\r\n            }\r\n        },\r\n        methods: {\r\n            ...mapActions(\"picture\", [\"ACollection\"]),\r\n            async collection(picture) {\r\n                const result = await this.ACollection({\r\n                    pictureId: picture.id\r\n                })\r\n                if (result.status !== 200) {\r\n                    this.$notify({ message: result.message })\r\n                    return\r\n                }\r\n                picture.focus = result.data\r\n            },\r\n            follow({ userId, focus }) {\r\n                this.likeList.forEach((item) => {\r\n                    if (item.user.id === userId) {\r\n                        item.user.focus = focus\r\n                    }\r\n                })\r\n                this.newList.forEach((item) => {\r\n                    if (item.user.id === userId) {\r\n                        item.user.focus = focus\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style type=\"text/less\" lang=\"less\" scoped>\r\n    @import \"../../assets/style/color\";\r\n    @import \"../../assets/style/config\";\r\n    @import \"../../assets/style/mixin\";\r\n\r\n    .user-bk {\r\n        width: 100%;\r\n        margin-top: -@herder-height;\r\n        height: @window-min-width / 2;\r\n    }\r\n\r\n    .content-grid {\r\n        @lift-box-width: 850px;\r\n        @right-box-width: 250px;\r\n        @gap-size: @visual-width - @lift-box-width - @right-box-width;\r\n        display: grid;\r\n        justify-content: space-between;\r\n        grid-template-columns: 850px 250px;\r\n        width: @visual-width;\r\n        margin: 0 auto;\r\n        padding: @page-gap 0;\r\n        .title {\r\n            font-size: 16px;\r\n            line-height: 28px;\r\n            margin-bottom: 10px;\r\n            a {\r\n                float: right;\r\n            }\r\n        }\r\n        .left-box {\r\n            display: grid;\r\n            grid-template-columns: repeat(1, 1fr);\r\n            grid-row-gap: @gap-size;\r\n        }\r\n\r\n        .image-card {\r\n            padding: 10px;\r\n            .image-grid-row {\r\n                @img-size: 200px;\r\n                display: grid;\r\n                width: 100%;\r\n                margin: 0 auto;\r\n                justify-content: space-between;\r\n                grid-template-columns: repeat(4, @img-size);\r\n                grid-gap: 10px;\r\n\r\n                .img-box {\r\n                    position: relative;\r\n                    a {\r\n                        width: @img-size;\r\n                        height: @img-size;\r\n                        display: block;\r\n                    }\r\n                    .cover {\r\n                        display: block;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                    }\r\n                }\r\n                .picture-name {\r\n                    text-align: center;\r\n                    font-size: @small-font-size;\r\n                    font-weight: 600;\r\n                    margin-bottom: 0;\r\n                    .ellipsis();\r\n                    a {\r\n                        color: @font-color-dark;\r\n                    }\r\n                }\r\n                .tool {\r\n                    margin: 10px 0;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    .head-image {\r\n                        @head-size: @small-input-line-height;\r\n                        width: @head-size;\r\n                        height: @head-size;\r\n                        border-radius: 50%;\r\n                        overflow: hidden;\r\n                        display: inline-block;\r\n                        vertical-align: middle;\r\n                        img {\r\n                            width: 100%;\r\n                            height: 100%;\r\n                            border-radius: 50%;\r\n                        }\r\n                    }\r\n                    .tool-btn-group {\r\n                        flex: 1;\r\n                        display: flex;\r\n                        justify-content: flex-end;\r\n                        align-items: center;\r\n                        span {\r\n                            margin-left: 3px;\r\n                            margin-right: 6px;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        .tag-card {\r\n            @spacing: 10px;\r\n            padding: @spacing;\r\n            .tag-picture-carousel {\r\n                margin-bottom: 15px;\r\n                img {\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    object-fit: cover;\r\n                }\r\n            }\r\n            .tag-list {\r\n                margin-bottom: -@spacing;\r\n                .btn {\r\n                    margin-right: @spacing;\r\n                    margin-bottom: @spacing;\r\n                    line-height: 25px;\r\n                    padding: 0 2em;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"]}]}