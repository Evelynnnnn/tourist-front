{"remainingRequest":"E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Front\\vue-manage-system-dev\\src\\components\\pages\\shared\\UserCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Front\\vue-manage-system-dev\\src\\components\\pages\\shared\\UserCard.vue","mtime":1581686428000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from \"vuex\"\n\nexport default {\n  componentName: \"UserCard\",\n  props: {\n    user: { type: Object, default: null }\n  },\n  methods: {\n    ...mapActions(\"user\", [\"AFollow\"]),\n    async follow() {\n      const result = await this.AFollow({\n        followingId: this.user.id\n      })\n      if (result.status !== 200) {\n        this.$notify({ message: result.message })\n        return\n      }\n      this.$emit(\"follow\", { userId: this.user.id, focus: result.data })\n    }\n  }\n}\n",{"version":3,"sources":["UserCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserCard.vue","sourceRoot":"src/components/pages/shared","sourcesContent":["<template>\n  <div class=\"size\">\n    <div\n      v-lazy:background-image=\"$img.backLazy(user.background, `backCard`)\"\n      class=\"cover\"\n    ></div>\n    <div class=\"flex-box\" style=\"padding:10px\">\n      <nuxt-link v-ripple :to=\"`/user/${user.id}`\" class=\"head-box\">\n        <img v-lazy=\"$img.headLazy(user.head, 'small50')\" />\n      </nuxt-link>\n      <div class=\"user-info-box\">\n        <p class=\"nickname\">\n          <nuxt-link :to=\"`/user/${user.id}`\" class=\"primary-hover\">{{\n            user.name\n          }}</nuxt-link>\n        </p>\n        <p v-tooltip:150=\"user.introduction\" class=\"introduction\">\n          {{ user.introduction }}\n        </p>\n      </div>\n    </div>\n    <div style=\"margin-top: -10px;padding: 10px;\">\n      <Btn\n        block\n        color=\"primary\"\n        :disabled=\"user.focus === $enum.FollowState.SElF.key\"\n        @click=\"follow\"\n      >\n        {{ user.focus === $enum.FollowState.CONCERNED.key ? `已关注` : `关注` }}\n      </Btn>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\"\n\nexport default {\n  componentName: \"UserCard\",\n  props: {\n    user: { type: Object, default: null }\n  },\n  methods: {\n    ...mapActions(\"user\", [\"AFollow\"]),\n    async follow() {\n      const result = await this.AFollow({\n        followingId: this.user.id\n      })\n      if (result.status !== 200) {\n        this.$notify({ message: result.message })\n        return\n      }\n      this.$emit(\"follow\", { userId: this.user.id, focus: result.data })\n    }\n  }\n}\n</script>\n\n<style type=\"text/less\" lang=\"less\" scoped>\n@import \"../../../assets/style/color\";\n@import \"../../../assets/style/config\";\n@import \"../../../assets/style/mixin\";\n\n@size: 300px;\n@img-size: 60px;\n.size {\n  width: @size;\n}\n\n.cover {\n  height: @size / 2;\n  width: @size;\n  background-color: @theme-background-color;\n}\n\n.head-box {\n  display: block;\n  position: relative;\n  border-radius: 50%;\n  img {\n    border-radius: 50%;\n    width: @img-size;\n  }\n}\n\n.user-info-box {\n  width: calc(100% - @img-size);\n  padding: 0 30px;\n\n  .nickname {\n    .ellipsis();\n  }\n  .introduction {\n    font-size: @smallest-font-size;\n    margin-top: 10px;\n    .ellipsis();\n  }\n}\n</style>\n"]}]}