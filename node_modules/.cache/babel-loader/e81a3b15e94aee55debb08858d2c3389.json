{"remainingRequest":"E:\\Front\\vue-manage-system-dev\\node_modules\\babel-loader\\lib\\index.js!E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Front\\vue-manage-system-dev\\src\\components\\page\\tourist\\MonthPersonNum.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Front\\vue-manage-system-dev\\src\\components\\page\\tourist\\MonthPersonNum.vue","mtime":1587547935273},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Front\\vue-manage-system-dev\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport echarts from 'echarts';\nexport default {\n  data: function data() {\n    return {\n      year: '2020',\n      month: '1',\n      value: '测试1',\n      years: [],\n      months: [],\n      options: [],\n      chooseDate: '',\n      address: '',\n      classPrefix: \"qst-tecs-src-teacher-dean-brokenLine_\",\n      xNum: [],\n      yNum: ['当日最高', '当日平均'],\n      series: [] // 折线图数据\n\n    };\n  },\n  methods: {\n    // 图表初始化数据\n    initChart: function initChart() {\n      var myChart = echarts.init(this.$refs.myEchart);\n      myChart.setOption({\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: this.yNum\n        },\n        grid: {\n          left: '3%',\n          right: '6%',\n          bottom: '3%',\n          top: '12%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: this.xNum,\n          axisLabel: {\n            interval: 0,\n            rotate: -60\n          }\n        },\n        yAxis: {\n          type: 'value',\n          min: 0,\n          max: 100,\n          interval: 20,\n          axisLabel: {\n            formatter: '{value}'\n          }\n        },\n        series: this.series\n      });\n    },\n    getSeries: function getSeries() {\n      var _this = this;\n\n      this.getXNum();\n      var that = this;\n      this.$axios.post('http://localhost:9099/tourist/count/monthCount', {\n        year: this.year,\n        month: this.month,\n        address: this.address\n      }).then(function (successResponse) {\n        that.series = successResponse.data;\n\n        _this.initChart();\n      });\n    },\n    getXNum: function getXNum() {\n      var that = this;\n      this.$axios.post('http://localhost:9099/tourist/count/getMonthDate', {\n        year: this.year,\n        month: this.month,\n        address: this.address\n      }).then(function (successResponse) {\n        that.xNum = successResponse.data;\n      });\n    },\n    getAddressName: function getAddressName() {\n      var that = this;\n      this.$axios.get('http://localhost:9099/tourist/count/allAddressName').then(function (successResponse) {\n        that.options = successResponse.data;\n      });\n    },\n    getYear: function getYear() {\n      var that = this;\n      this.$axios.get(\"http://localhost:9099/tourist/count/year\").then(function (successResponse) {\n        that.years = successResponse.data;\n      });\n    },\n    getMonth: function getMonth(year) {\n      var that = this;\n      this.$axios.get(\"http://localhost:9099/tourist/count/month?year=\" + year).then(function (successResponse) {\n        that.months = successResponse.data;\n      });\n    },\n    currentSel: function currentSel(selVal) {\n      this.address = selVal;\n    },\n    currentYearSel: function currentYearSel(selVal) {\n      this.year = selVal;\n      this.getMonth(this.year);\n    },\n    currentMonthSel: function currentMonthSel(selVal) {\n      this.month = selVal;\n    }\n  },\n  created: function created() {\n    this.getYear();\n    this.getMonth(this.year);\n    this.getXNum();\n    this.currentSel(this.value);\n    this.getAddressName();\n    this.getSeries();\n  },\n  mounted: function mounted() {\n    var obj = this.$refs.myEchart;\n\n    if (obj) {\n      this.initChart();\n    }\n  }\n};",{"version":3,"sources":["MonthPersonNum.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"block\">\r\n            年份:&nbsp;&nbsp;<el-select v-model=\"year\" clearable placeholder=\"请选择\" value-key=\"year\" @change=\"currentYearSel(year)\">\r\n                <el-option\r\n                        v-for=\"item in years\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.label\">\r\n                </el-option>\r\n            </el-select>\r\n            月份:&nbsp;&nbsp;<el-select v-model=\"month\" clearable placeholder=\"请选择\" value-key=\"month\" @change=\"currentMonthSel(month)\">\r\n                <el-option\r\n                        v-for=\"item in months\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.label\">\r\n                </el-option>\r\n            </el-select>\r\n            地点:&nbsp;&nbsp;<el-select v-model=\"value\" clearable placeholder=\"请选择\" value-key=\"value\" @change=\"currentSel(value)\">\r\n                <el-option\r\n                        v-for=\"item in options\"\r\n                        :key=\"item.value\"\r\n                        :label=\"item.label\"\r\n                        :value=\"item.label\">\r\n                </el-option>\r\n            </el-select>\r\n            <el-button @click=\"getSeries\">查询</el-button>\r\n        </div>\r\n        <div :class=\"classPrefix\" style=\"top: 20px\">\r\n            <div ref = 'myEchart' :class=\"classPrefix+'_chart'\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script type=\"text/babel\">\r\n    import echarts from 'echarts'\r\n    export default {\r\n        data() {\r\n            return {\r\n                year:'2020',\r\n                month:'1',\r\n                value:'测试1',\r\n                years:[],\r\n                months:[],\r\n                options:[],\r\n                chooseDate:'',\r\n                address:'',\r\n                classPrefix: \"qst-tecs-src-teacher-dean-brokenLine_\",\r\n                xNum:[],\r\n                yNum:['当日最高', '当日平均'],\r\n                series:[],   // 折线图数据\r\n            }\r\n        },\r\n        methods: {\r\n            // 图表初始化数据\r\n            initChart(){\r\n                let myChart = echarts.init(this.$refs.myEchart);\r\n                myChart.setOption({\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        data: this.yNum,\r\n                    },\r\n                    grid: {\r\n                        left: '3%',\r\n                        right: '6%',\r\n                        bottom: '3%',\r\n                        top:'12%',\r\n                        containLabel: true\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: this.xNum,\r\n                        axisLabel: {\r\n                            interval:0,\r\n                            rotate:-60\r\n                        }\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value',\r\n                        min: 0,\r\n                        max: 100,\r\n                        interval: 20,\r\n                        axisLabel: {\r\n                            formatter: '{value}'\r\n                        }\r\n                    },\r\n                    series: this.series,\r\n                })\r\n            },\r\n            getSeries(){\r\n                this.getXNum();\r\n                const that = this\r\n                this.$axios.post('http://localhost:9099/tourist/count/monthCount',{\r\n                    year:this.year,\r\n                    month:this.month,\r\n                    address:this.address\r\n                }).then( successResponse => {\r\n                    that.series = successResponse.data\r\n                    this.initChart();\r\n                })\r\n            },\r\n            getXNum(){\r\n                const that = this\r\n                this.$axios.post('http://localhost:9099/tourist/count/getMonthDate',{\r\n                    year:this.year,\r\n                    month:this.month,\r\n                    address:this.address\r\n                }).then(successResponse => {\r\n                    that.xNum = successResponse.data\r\n                })\r\n            },\r\n            getAddressName(){\r\n                const that = this\r\n                this.$axios.get('http://localhost:9099/tourist/count/allAddressName').then(successResponse => {\r\n                    that.options = successResponse.data\r\n                })\r\n            },\r\n            getYear(){\r\n                const that = this\r\n                this.$axios.get(\"http://localhost:9099/tourist/count/year\").then(successResponse => {\r\n                    that.years = successResponse.data\r\n                })\r\n            },\r\n            getMonth(year){\r\n                const that = this\r\n                this.$axios.get(\"http://localhost:9099/tourist/count/month?year=\"+year).then(successResponse => {\r\n                    that.months = successResponse.data\r\n                })\r\n            },\r\n            currentSel(selVal) {\r\n                this.address = selVal\r\n            },\r\n            currentYearSel(selVal) {\r\n                this.year = selVal\r\n                this.getMonth(this.year)\r\n            },\r\n            currentMonthSel(selVal) {\r\n                this.month = selVal\r\n            }\r\n        },\r\n        created() {\r\n            this.getYear();\r\n            this.getMonth(this.year);\r\n            this.getXNum();\r\n            this.currentSel(this.value);\r\n            this.getAddressName();\r\n            this.getSeries();\r\n        },\r\n        mounted () {\r\n            let obj = this.$refs.myEchart;\r\n            if(obj){\r\n                this.initChart();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" type=\"text/scss\" rel=\"stylesheet/scss\" scoped>\r\n    .qst-tecs-src-teacher-dean-brokenLine_ {\r\n        &_chart{\r\n            height:500px;\r\n            width:1200px;\r\n            top: 10px;\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/page/tourist"}]}